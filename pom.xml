<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.sonatype.oss</groupId>
        <artifactId>oss-parent</artifactId>
        <version>9</version>
    </parent>
    <groupId>com.github.sps.mustache</groupId>
    <artifactId>mustache-spring-view</artifactId>
    <packaging>jar</packaging>
    <version>1.5-SNAPSHOT</version>
    <name>mustache spring view</name>
    <description>a spring view for the mustache templating language http://mustache.github.com/
    </description>
    <url>http://github.com/sps/mustache-spring-view</url>
    <licenses>
        <license>
            <name>The Apache Software License, Version 2.0</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
            <distribution>repo</distribution>
        </license>
    </licenses>
    <scm>
        <url>http://github.com/sps/mustache-spring-view</url>
        <connection>scm:git:git@github.com:sps/mustache-spring-view.git</connection>
        <developerConnection>scm:git:git@github.com:sps/mustache-spring-view.git
        </developerConnection>
    </scm>
    <developers>
        <developer>
            <id>sps</id>
            <name>Sean Scanlon</name>
            <email>sean.scanlon@gmail.com</email>
        </developer>
    </developers>
    <properties>
        <org.springframework.version>6.0.2</org.springframework.version>
        <jmustache.version>1.15</jmustache.version>
        <mustache.java.version>0.9.10</mustache.java.version>
        <mockito.version>4.9.0</mockito.version>
        <junit.version>4.13.2</junit.version>
        <jdk.version>17</jdk.version>
    </properties>
    <profiles>
	    <profile>
		    <id>disable-java8-doclint</id>
		    <activation>
			    <jdk>[1.8,)</jdk>
		    </activation>
		    <properties>
			    <additionalparam>-Xdoclint:none</additionalparam>
		    </properties>
	    </profile>
    </profiles>
    <build>
        <plugins>
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.10.1</version>
                <configuration>
                    <source>${jdk.version}</source>
                    <target>${jdk.version}</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <version>1.2</version>
                <executions>
                    <execution>
                        <id>enforce</id>
                        <configuration>
                            <rules>
                                <DependencyConvergence />
                            </rules>
                        </configuration>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
<!--  New errors due to running spotbug.... -->
<!--            [ERROR] Medium: org.springframework.web.servlet.i18n.MustacheLocalizationMessageInterceptor.setLocaleResolver(LocaleResolver) may expose internal representation by storing an externally mutable object into MustacheLocalizationMessageInterceptor.localeResolver [org.springframework.web.servlet.i18n.MustacheLocalizationMessageInterceptor] At MustacheLocalizationMessageInterceptor.java:[line 120] EI_EXPOSE_REP2-->
<!--            [ERROR] Medium: Non-null field localeResolver is not initialized by new org.springframework.web.servlet.i18n.MustacheLocalizationMessageInterceptor() [org.springframework.web.servlet.i18n.MustacheLocalizationMessageInterceptor] At MustacheLocalizationMessageInterceptor.java:[lines 40-49] NP_NONNULL_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR-->
<!--            [ERROR] Medium: Non-null field messageSource is not initialized by new org.springframework.web.servlet.i18n.MustacheLocalizationMessageInterceptor() [org.springframework.web.servlet.i18n.MustacheLocalizationMessageInterceptor] At MustacheLocalizationMessageInterceptor.java:[lines 40-49] NP_NONNULL_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR-->
<!--            [ERROR] Medium: new org.springframework.web.servlet.view.mustache.MustacheViewResolver(MustacheTemplateFactory) may expose internal representation by storing an externally mutable object into MustacheViewResolver.templateFactory [org.springframework.web.servlet.view.mustache.MustacheViewResolver] At MustacheViewResolver.java:[line 30] EI_EXPOSE_REP2-->
<!--            [ERROR] Medium: new org.springframework.web.servlet.view.mustache.java.MustacheJTemplate(Mustache) may expose internal representation by storing an externally mutable object into MustacheJTemplate.template [org.springframework.web.servlet.view.mustache.java.MustacheJTemplate] At MustacheJTemplate.java:[line 29] EI_EXPOSE_REP2-->
<!--            [ERROR] Medium: org.springframework.web.servlet.view.mustache.jmustache.JMustacheTemplateFactory.setTemplateLoader(JMustacheTemplateLoader) may expose internal representation by storing an externally mutable object into JMustacheTemplateFactory.templateLoader [org.springframework.web.servlet.view.mustache.jmustache.JMustacheTemplateFactory] At JMustacheTemplateFactory.java:[line 71] EI_EXPOSE_REP2-->
<!--            [INFO]-->
            <plugin>
                <groupId>com.github.spotbugs</groupId>
                <artifactId>spotbugs-maven-plugin</artifactId>
                <version>4.7.3.0</version>
                <dependencies>
                    <!-- overwrite dependency on spotbugs if you want to specify the version of spotbugs -->
                    <dependency>
                        <groupId>com.github.spotbugs</groupId>
                        <artifactId>spotbugs</artifactId>
                        <version>4.7.3</version>
                    </dependency>
                </dependencies>
            </plugin>
<!--            <plugin>-->
<!--                <groupId>org.codehaus.mojo</groupId>-->
<!--                <artifactId>findbugs-maven-plugin</artifactId>-->
<!--                <version>3.0.4</version>-->
<!--                <configuration>-->
<!--                    <effort>Max</effort>-->
<!--                    <threshold>Default</threshold>-->
<!--                    <xmlOutput>true</xmlOutput>-->
<!--                </configuration>-->
<!--                <executions>-->
<!--                    <execution>-->
<!--                        <goals>-->
<!--                            <goal>check</goal>-->
<!--                        </goals>-->
<!--                    </execution>-->
<!--                </executions>-->
<!--            </plugin>-->
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>0.8.8</version>
                <executions>
                    <execution>
                        <id>default-prepare-agent</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>default-report</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>default-check</id>
                        <goals>
                            <goal>check</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <!-- implementation is needed only for Maven 2 -->
                                <rule implementation="org.jacoco.maven.RuleConfiguration">
                                    <element>BUNDLE</element>
                                    <limits>
                                        <!-- implementation is needed only for Maven 2 -->
                                        <limit implementation="org.jacoco.report.check.Limit">
                                            <counter>COMPLEXITY</counter>
                                            <value>COVEREDRATIO</value>
                                            <minimum>0.90</minimum>
                                        </limit>
                                    </limits>
                                </rule>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.eluder.coveralls</groupId>
                <artifactId>coveralls-maven-plugin</artifactId>
                <version>2.1.0</version>
                <configuration>
                    <repoToken>${COVERALLS_REPO_TOKEN}</repoToken>
                </configuration>
            </plugin>
        </plugins>
    </build>
    <dependencies>

        <dependency>
            <groupId>com.samskivert</groupId>
            <artifactId>jmustache</artifactId>
            <version>${jmustache.version}</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>com.github.spullara.mustache.java</groupId>
            <artifactId>compiler</artifactId>
            <version>${mustache.java.version}</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
            <version>${org.springframework.version}</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-web</artifactId>
            <version>${org.springframework.version}</version>
            <scope>provided</scope>
        </dependency>


        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
            <version>${org.springframework.version}</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-core</artifactId>
            <version>${org.springframework.version}</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-beans</artifactId>
            <version>${org.springframework.version}</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>jakarta.servlet</groupId>
            <artifactId>jakarta.servlet-api</artifactId>
            <version>6.0.0</version>
            <scope>provided</scope>
        </dependency>


        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>${mockito.version}</version>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.hamcrest</groupId>
                    <artifactId>hamcrest-core</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

    </dependencies>
</project>